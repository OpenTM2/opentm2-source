<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "ibm-reference.dtd">
<reference xml:lang="en-us" id="api_EqfExportFolderFPas">
  <title>EqfExportFolderFPas</title>
  <prolog>
    <metadata>
      <keywords><!--Insert <indexterm> tags here--></keywords>
    </metadata>
  </prolog>
  <refbody>
    <section>
      <title>Purpose</title>
      <indexterm>EqfExportFolderFPas</indexterm>
      <indexterm>programming interface calls<indexterm>EqfExportFolderFPas</indexterm></indexterm>
      <p><i>EqfExportFolderFPas</i> exports a folder to a specific path with the option to specify a
        new filename to the exported folder.</p>
      <p>This function performs the export in small units. Call it repetitively until it returns a
        return code other than CONTINUE_RC.</p>
    </section>
    <refsyn>
      <title>Format</title>
      <syntaxdiagram>
        <groupseq>
          <kwd>usRC</kwd>
          <oper> = </oper>
          <kwd>EqfExportFolderFPas</kwd>
          <delim>(</delim>
          <var>hSession</var>
          <sep>,</sep>
          <var>pszFolderName</var>
          <sep>,</sep>
        </groupseq>
        <groupseq>
          <var>pszTargetPath</var>
          <sep>,</sep>
          <var importance="optional">pszExportAs</var>
          <sep>,</sep>
          <groupchoice importance="optional">
            <kwd>WITHMEM_OPT</kwd>
            <kwd>WITHREADONLYMEM_OPT</kwd>
            <kwd>WITHDOCMEM_OPT</kwd>
            <kwd>DELETE_OPT</kwd>
            <kwd>WITHDICT_OPT</kwd>
            <kwd>OVERWRITE_OPT</kwd>
          </groupchoice>
          <sep>,</sep>
        </groupseq>
        <groupseq>
          <groupseq importance="optional">
            <groupseq>
              <repsep>,</repsep>
              <var>pszDocuments</var>
            </groupseq>
          </groupseq>
          <sep>,</sep>
          <var importance="optional">pszDescription</var>
          <sep>,</sep>
          <var importance="optional">pszMemoryExportAs</var>
          <delim>)</delim>
          <sep>;</sep>
        </groupseq>
      </syntaxdiagram>
    </refsyn>
    <section>
      <title>Parameters</title>
      <table pgwide="0" frame="topbot" colsep="1" rowsep="1">
        <tgroup cols="3">
          <colspec colname="col1" colwidth="52*"/>
          <colspec colname="col2" colwidth="90*"/>
          <colspec colname="col3" colwidth="145*"/>
          <thead valign="top">
            <row>
              <entry align="left">Type</entry>
              <entry align="left">Parameter</entry>
              <entry align="left">Description </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry colname="col1">HSESSION</entry>
              <entry colname="col2">hSession</entry>
              <entry colname="col3">The EQF session handle, as returned by
                <i>EqfStartSession</i>.</entry>
            </row>
            <row>
              <entry colname="col1">PSZ</entry>
              <entry colname="col2">pszFolderName</entry>
              <entry colname="col3">The name of the folder to be exported.</entry>
            </row>
            <row>
              <entry colname="col1">PSZ</entry>
              <entry colname="col2">pszTargetPath</entry>
              <entry colname="col3">The path to which the folder is exported.</entry>
            </row>
            <row>
              <entry colname="col1">PSZ</entry>
              <entry colname="col2">pszExportAs</entry>
              <entry colname="col3">The filename of the exported folder, or NULL. </entry>
            </row>
            <row>
              <entry colname="col1">LONG</entry>
              <entry colname="col2">lOptions</entry>
              <entry colname="col3">The options to be used for the export: <sl>
                  <sli>WITHMEM_OPT</sli>
                  <sli>WITHREADONLYMEM_OPT</sli>
                  <sli>WITHDOCMEM_OPT</sli>
                  <sli>DELETE_OPT</sli>
                  <sli>WITHDICT_OPT</sli>
                  <sli>OVERWRITE_OPT</sli>
                </sl>
                <p>These options correspond to those in the <q>Export Folder</q> window in OpenTM2.</p>
                <p>You can combine the constants using OR.</p>
              </entry>
            </row>
            <row>
              <entry colname="col1">PSZ</entry>
              <entry colname="col2">pszDocuments</entry>
              <entry colname="col3">The name of one or more documents.</entry>
            </row>
            <row>
              <entry colname="col1">PSZ</entry>
              <entry colname="col2">pszDescription</entry>
              <entry colname="col3">The folder description, or NULL.</entry>
            </row>
            <row>
              <entry colname="col1">PSZ</entry>
              <entry colname="col2">pszMemoryExportAs</entry>
              <entry colname="col3">The filename of the exported memory in the folder, or
                NULL.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section>
      <title>Return code</title>
      <p>USHORT</p>
      <table pgwide="0" frame="topbot" colsep="1" rowsep="1">
        <tgroup cols="2">
          <colspec colname="col1" align="left" colwidth="40*"/>
          <colspec colname="col2" align="left" colwidth="157*"/>
          <thead valign="top">
            <row>
              <entry align="left">Value</entry>
              <entry align="left">Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry colname="col1">0 (NO_ERROR)</entry>
              <entry colname="col2">The function completed successfully.</entry>
            </row>
            <row>
              <entry colname="col1">CONTINUE_RC</entry>
              <entry colname="col2">The folder export has not completed yet. Call
                  <i>EqfExportFolderFP</i> again.</entry>
            </row>
            <row>
              <entry colname="col1">other</entry>
              <entry colname="col2">
                <ph otherprops="print">Error code (EQF message number). Use <i>EqfGetLastError</i>
                  (see <ph otherprops="print">page <xref href="api_EqfGetLastError.dita#api_EqfGetLastError"
                    /></ph><xref otherprops="display" href="api_EqfGetLastError.dita#api_EqfGetLastError"/>)
                  to retrieve the complete error information.</ph>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <example>
      <title>Code sample</title>
      <codeblock>{
  USHORT usRC = 0;
  HSESSION hSession = 0L;

  // start the Eqf calling interface session
  usRC = EqfStartSession( &amp;hSession );

  // Export the folder SAMPLE1 to path C:\PROJECT with the 
  // folder Translation Memory and all folder dictionaries, 
  // overwrite any previously exported folder in path C:\PROJECT
  // the folder memory is renamed to "MEM1"
  if ( !usRC )
  {
    do
    {
            usRC = EqfExportFolderFPas( hSession, "SAMPLE1", 
                         'C:\PROJECT', "MyFoll", 
                         WITHMEM_OPT | WITHDICT_OPT | OVERWRITE_OPT, 
                         NULL, NULL, "MEM1" );
    } while ( usRC == CONTINUE_RC );
  } /* endif */

  // terminate the session 
  EqfEndSession( hSession );
}</codeblock>
    </example>
  </refbody>
</reference>
