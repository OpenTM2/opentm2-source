<?altova_samplexml i:\eqf\reptest.f00\rpt.xml?>
<!--
    Copyright (c) 1999-2015, International Business Machines
    Corporation and others.  All rights reserved.
-->

<!-- &nbsp; does not exists in XPath, so defined as the real unicode character 160
     which is the non breaking space character and provides exactly the same result than using &nbsp; -->
     
<!DOCTYPE xsl:stylesheet 
	[
		<!ENTITY nbsp "&#160;">
	]>

<!-- CNTHTML.XSL

	Author: Gerhard Queck

	Purpose: Convert an XML redundant segment list to HTML
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

	<xsl:output method="html" encoding="utf-8"/>

	<xsl:template match="/">
		<html>
<!-- <head> required to put <META http-equiv="Content-Type" content="text/html; charset=utf-8">
     generated by output encoding attribute -->
     		<head></head>
			<body>
				<xsl:call-template name="reportheader" />
			    <xsl:for-each select="/tmredsegments/redundantEntry">
					<xsl:call-template name="redentry">
						<xsl:with-param name="entry" select="."/>
					</xsl:call-template>
			    </xsl:for-each>
			</body>
		</html>
	</xsl:template>
	
<!-- create report header --> 
<xsl:template name = "reportheader" >
	<P><BR/></P>
	<CENTER>
	<TABLE border="1">
	   <TBODY>
		  <TR>
			 <TD bgcolor="#d3d3d3">Report:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/report/@type"/>&nbsp;<xsl:value-of select="/tmredsegments/description/report/@layout"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">TM Version:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/translationManager/@version"/>.<xsl:value-of select="/tmredsegments/description/translationManager/@release"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Calculation Profile:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/profile/@name"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Report Generated at:</TD>
			 <TD bgcolor="#f7f7f7">
				 <xsl:value-of select="/tmredsegments/description/report/@generatedDate"/>
				 &nbsp;
				 <xsl:value-of select="/tmredsegments/description/report/@generatedTime"/>
			</TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Folder Name:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/folder/@nameLong"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Documents in Folder:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/folder/@documentsAmount"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Documents selected:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/report/@documentsSelected"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Target Language:</TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="/tmredsegments/description/folder/@targetLanguage"/></TD>
		  </TR>
	   </TBODY>
	</TABLE>
	</CENTER>
</xsl:template>

<!-- create output for on eentry --> 
<xsl:template name = "redentry" >
	<xsl:param name="entry"></xsl:param>
	<P>
	<TABLE border="1">
	   <TBODY>
		  <TR>
			 <TD bgcolor="#d3d3d3">Entry: </TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="$entry/@num"/></TD>
		  </TR>
		  <TR>
			 <TD bgcolor="#d3d3d3">Frequency: </TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="$entry/@frequency"/></TD>
		  </TR>
		  <xsl:for-each select="$entry/document">
			  <TR>
				 <TD bgcolor="#d3d3d3">Location: </TD>
				 <TD bgcolor="#f7f7f7">
					 <xsl:value-of select="./@folderobjname"/>
					 <xsl:value-of select="./@docname"/>
					 (<xsl:value-of select="./@segnum"/>)
				 </TD>
			  </TR>
		  </xsl:for-each>
		  <TR>
			 <TD bgcolor="#d3d3d3">Segment: </TD>
			 <TD bgcolor="#f7f7f7"><xsl:value-of select="$entry/segment"/></TD>
		  </TR>
	   </TBODY>
	</TABLE>
	</P>
</xsl:template>

</xsl:stylesheet>
